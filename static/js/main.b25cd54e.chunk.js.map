{"version":3,"sources":["milos.jpg","will-smith.jpg","gorrito.png","simulator.js","EditorComponent/TemplateModal.js","EditorComponent/ToolBar.js","EditorComponent/EditorComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","templates","name","tags","url","TemplateModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fetching","ctx","setTimeout","setState","myfun","_this2","react_default","a","createElement","className","mt-2","for","id","type","style","display","flexDirection","alignItems","justifyContent","Spinner","animation","map","template","onClick","onSelection","width","src","Component","ToolBar","showColorPicker","context","lib","color","textColor","triangle","onChangeComplete","changeColor","colors","title","_this3","padding","border","borderRadius","boxShadow","addAccesory","addText","saveFile","canvas","getActiveObjects","activeObject","remove","EditorComponent","hex","ao","set","reloadCanvas","openCloseModal","show","textSelected","_keyHandler","bind","assertThisInitialized","_showerHandler","_resizeCanvas","setBackgroundImage","evt","c","key","window","innerHeight","innerWidth","document","getElementById","clientWidth","fabric","Canvas","setWidth","setHeight","image","Image","require","crossOrigin","onload","renderAll","backgroundImageStretch","scaleX","scaleY","height","waterMark","watermark","Text","fill","evented","selectable","fontSize","top","getHeight","add","addEventListener","removeEventListener","f_img","scaleToWidth","getWidth","txtCanvas","Textbox","setColor","setActiveObject","toBlob","blob","saveAs","renderAndReset","_url","preventDefault","ToolBar_ToolBar","Modal","size","onHide","Header","closeButton","Title","Body","TemplateModal_TemplateModal","Footer","Button","variant","Boolean","location","hostname","match","ReactDOM","render","EditorComponent_EditorComponent","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b25cd54e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/milos.6d8eb209.jpg\";","module.exports = __webpack_public_path__ + \"static/media/will-smith.490f4869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gorrito.538a753b.png\";","export const templates = [\r\n    {\r\n        name: \"Bob esponja\",\r\n        tags: [\r\n            \"Helado\",\r\n            \"Esponja enloqueciste\"\r\n        ],\r\n        url: \"https://i.imgur.com/1Lisqti.jpg\"\r\n    },\r\n    {\r\n        name: \"CR7\",\r\n        tags: [\r\n            \"CR7\",\r\n            \"SIU\"\r\n        ],\r\n        url: \"https://i.imgur.com/1Lisqti.jpg\"\r\n    },\r\n    {\r\n        name: \"Bob esponja\",\r\n        tags: [\r\n            \"Helado\",\r\n            \"Esponja enloqueciste\"\r\n        ],\r\n        url: \"https://i.imgur.com/1Lisqti.jpg\"\r\n    },\r\n    {\r\n        name: \"CR7\",\r\n        tags: [\r\n            \"CR7\",\r\n            \"SIU\"\r\n        ],\r\n        url: \"https://i.imgur.com/1Lisqti.jpg\"\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport { templates } from '../simulator';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nclass TemplateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetching: true\r\n        };\r\n    }\r\n\r\n    myfun() {\r\n        let ctx = this;\r\n        setTimeout(() => {\r\n            ctx.setState({\r\n                fetching: false\r\n            });\r\n        }, 3000);\r\n    }\r\n    componentDidMount() {\r\n      this.myfun();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\"> <form className=\"form-inline mb-3\">\r\n                <div className=\"form-group\">\r\n                    <label mt-2 for=\"search\">Buscar plantilla </label>\r\n                    <input className=\"form-control mt-2 ml-2 mr-1\" id=\"search\" type=\"text\"></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn btn-success mt-2 mr-2\">Buscar</button>\r\n                </div>\r\n            </form>\r\n                {this.state.fetching ? <div className=\"p-4\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Spinner animation=\"grow\">\r\n                    </Spinner>\r\n                    <p className=\"text-center\"><bold>Cargando...</bold></p>\r\n                </div> : <div className=\"row\">\r\n                        {\r\n                            templates.map(\r\n                                template => {\r\n                                    return <div className=\"col-md-4\" onClick={\r\n                                        () => {\r\n                                            this.props.onSelection(template.url);\r\n                                        }\r\n                                    }>\r\n                                        <p>{template.name}</p>\r\n                                        <img width=\"100%\" src={template.url} ></img>\r\n                                    </div>\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    TemplateModal\r\n};","import React, { Component } from \"react\";\r\nimport { TwitterPicker } from 'react-color';\r\n\r\nclass ToolBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showColorPicker: false\r\n        };\r\n        this.ctx = this.props.context;\r\n    }\r\n    showColorPicker() {\r\n        if (this.state.showColorPicker)\r\n            return <div className=\"d-flex flex-wrap\">\r\n                <TwitterPicker color={this.ctx.state.textColor ? this.ctx.state.textColor : '#fff'} triangle={\"hide\"} onChangeComplete={this.ctx.changeColor} colors={['#fff', '#000']} />\r\n                <button className=\"btn btn-light\" title=\"Close\" onClick={() => {\r\n                    this.setState({ showColorPicker: !this.state.showColorPicker })\r\n                }}> <i className=\"fa fa-close\" />\r\n                </button>\r\n            </div>\r\n    }\r\n    render() {\r\n        return <div className=\"mb-3 mt-3\" style={{ display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'center', width: 'auto', padding: 10, border: '2px solid white', borderRadius: 10, boxShadow: '.5px .5px .5px .5px grey' }}>\r\n            <p className=\"text-center\"><b>Herramientas</b></p><div className=\"d-flex flex-wrap\">\r\n                {this.showColorPicker()}\r\n                <input id=\"file-input\" type=\"file\" name=\"name\" style={{ display: 'none' }} />\r\n                <button className=\"btn btn-light\" onClick={() => { this.ctx.addAccesory() }}><i className=\"fa fa-image\" />\r\n                </button>\r\n                <button className=\"btn btn-light\" title=\"Agrega texto\" onClick={() => { this.setState({ showColorPicker: !this.state.showColorPicker }); this.ctx.addText() }}><i className=\"fa fa-font\" />\r\n                </button>\r\n                <button className=\"btn btn-light\" title=\"Color\" onClick={() => { this.setState({ showColorPicker: !this.state.showColorPicker }); }}><i className=\"fa fa-tint\" />\r\n                </button>\r\n                <button className=\"btn btn-light\" title=\"SAVE\" onClick={() => { this.ctx.saveFile() }}><i className=\"fa fa-save\" /></button>\r\n                <button className=\"btn btn-light\" title=\"DELETE\" onClick={() => {\r\n                    let ctx = this.ctx;\r\n                    this.ctx.canvas.getActiveObjects().map(\r\n                        activeObject => {\r\n                            return ctx.canvas.remove(activeObject);\r\n                        }\r\n                    )\r\n                }}> <i className=\"fa fa-trash\" />\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nexport { ToolBar };","import React, { Component } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { saveAs } from 'file-saver';\r\nimport { TemplateModal } from './TemplateModal';\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { ToolBar } from './ToolBar';\r\n\r\nclass EditorComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            textColor: 'black',\r\n            showColorPicker: false,\r\n            show: false,\r\n            textSelected: false\r\n        }\r\n        this._keyHandler = this._keyHandler.bind(this);\r\n        this._showerHandler = this._showerHandler.bind(this);\r\n        this._resizeCanvas = this._resizeCanvas.bind(this);\r\n        this.setBackgroundImage = this.setBackgroundImage.bind(this);\r\n    }\r\n\r\n    _resizeCanvas() {\r\n\r\n    }\r\n    _keyHandler(evt) {\r\n        const c = this.canvas;\r\n        switch (evt.key) {\r\n            case 'Delete':\r\n                c.getActiveObjects().map(\r\n                    activeObject => {\r\n                        return c.remove(activeObject);\r\n                    }\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    _showerHandler(show) {\r\n        this.setState({ showColorPicker: show })\r\n    }\r\n\r\n    componentDidMount() {\r\n        var wheight = window.innerHeight,\r\n            wwidth = window.innerWidth;\r\n        const width = document.getElementById('imageContainer').clientWidth;\r\n        var canvas = new fabric.Canvas('c');\r\n        this.canvas = canvas;\r\n        this.canvas.setWidth(width * .90);\r\n        this.canvas.setHeight(width * .70);\r\n        var image = new Image();\r\n        image.src = require('../milos.jpg');\r\n        image.crossOrigin = '';\r\n        image.onload = function () {\r\n            var height = wheight * .80;\r\n            var aspectRatio = 1;    // height:width = 3:2\r\n            //canvas.setDimensions({ height: wheight * .60, width: wwidth * .60 })\r\n            canvas.setBackgroundImage(new fabric.Image(image), canvas.renderAll.bind(canvas), {\r\n                backgroundImageStretch: true,\r\n                scaleX: canvas.width / image.width,\r\n                scaleY: canvas.height / image.height\r\n            });\r\n        }\r\n\r\n        var waterMark = new Image();\r\n        waterMark.src = require('../will-smith.jpg');\r\n        waterMark.onload = function () {\r\n            var watermark = new fabric.Text(\"Momingo.net\");\r\n            watermark.fill = 'white';\r\n            watermark.evented = false;\r\n            watermark.selectable = false;\r\n            watermark.fontSize = 20;\r\n            watermark.top = canvas.getHeight() / 2;\r\n            canvas.add(watermark);\r\n        }\r\n\r\n        document.addEventListener('keydown', this._keyHandler, false);\r\n        window.addEventListener('resize', this._resizeCanvas, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', null);\r\n    }\r\n\r\n    addAccesory() {\r\n        var image = new Image();\r\n        image.src = require('../gorrito.png');\r\n        const canvas = this.canvas;\r\n        image.onload = function () {\r\n            var f_img = new fabric.Image(image);\r\n            f_img.scaleToWidth(canvas.getWidth() * .25)\r\n\r\n            canvas.add(f_img);\r\n        }\r\n    }\r\n\r\n    addText() {\r\n        var txtCanvas = new fabric.Textbox('Escribe aqui');\r\n        txtCanvas.setColor(this.state.textColor);\r\n        txtCanvas.fontSize = 18;\r\n\r\n        this.canvas.add(txtCanvas);\r\n        this.canvas.setActiveObject(txtCanvas);\r\n    }\r\n\r\n    saveFile() {\r\n        var canvas = document.getElementById('c');\r\n        canvas.toBlob(\r\n            function (blob) {\r\n                saveAs(blob, 'meme.jpg');\r\n            }\r\n        )\r\n    }\r\n\r\n    reloadCanvas() {\r\n        this.canvas.renderAndReset();\r\n    }\r\n\r\n    changeColor = color => {\r\n        this.setState({ textColor: color.hex });\r\n\r\n        this.canvas.getActiveObjects().map(\r\n            ao => {\r\n                switch (ao.type) {\r\n                    case 'textbox':\r\n                        ao.set('fill', this.state.textColor);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        );\r\n        this.reloadCanvas();\r\n    }\r\n\r\n    setBackgroundImage(_url) {\r\n        var image = new Image();\r\n        image.crossOrigin = 'Anonymous';\r\n        image.src = _url;\r\n        let canvas = this.canvas;\r\n        image.onload =\r\n            function () {\r\n                canvas.setBackgroundImage(new fabric.Image(image), canvas.renderAll.bind(canvas), {\r\n                    backgroundImageStretch: true,\r\n                    scaleX: canvas.width / image.width,\r\n                    scaleY: canvas.height / image.height\r\n                });\r\n            }\r\n\r\n\r\n    }\r\n\r\n    openCloseModal = () => {\r\n        this.setState({ show: !this.state.show });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                    <a className=\"navbar-brand\" style={{ color: \"#fff\" }}>Momingo.net</a>\r\n                </nav>\r\n                <div className=\"container-fluid\">\r\n                    <h3 className='text-center'>Momingo Generator</h3>\r\n                    <br></br>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6 pr-3\" id=\"imageContainer\">\r\n                            <form className=\"form-inline\">\r\n                                <div>\r\n                                    <button onClick={(evt) => {\r\n                                        evt.preventDefault();\r\n                                        this.openCloseModal();\r\n                                    }} className=\"btn btn-success mt-2 mr-2\">Buscar plantillas</button>\r\n                                    <button onClick={(evt) => {\r\n                                    }} className=\"btn btn-info mt-2\">Seleccionar propia</button>\r\n                                </div>\r\n                            </form>\r\n\r\n\r\n                            <ToolBar context={this} ></ToolBar>\r\n\r\n\r\n                            <canvas id='c'></canvas>\r\n                        </div>\r\n                        <div className=\"col-md-1\">\r\n                            Hi\r\n                           </div>\r\n\r\n\r\n                    </div>\r\n                    <Modal size=\"lg\" show={this.state.show} onHide={this.openCloseModal}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Plantillas</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <TemplateModal onSelection={this.setBackgroundImage}>\r\n                            </TemplateModal>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.openCloseModal}>\r\n                                Close\r\n          </Button>\r\n                            <Button variant=\"primary\" onClick={() => {\r\n\r\n                            }}>\r\n                                Save Changes\r\n          </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { EditorComponent };","import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark navbar fixed-top\">\n          <a className=\"navbar-brand\" href=\"#\">Momingo.net</a>\n        </nav>\n        <main role=\"main\">\n\n          <p>HOLA</p>\n        </main>\n\n        <footer className=\"container\">\n          <p>&copy; Bean.io 2019</p>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {EditorComponent} from './EditorComponent/EditorComponent';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<EditorComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}