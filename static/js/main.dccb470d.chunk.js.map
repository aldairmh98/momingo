{"version":3,"sources":["milos.jpg","will-smith.jpg","gorrito.png","simulator.js","EditorComponent/EditorComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","templates","name","tags","url","EditorComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeColor","color","setState","textColor","hex","canvas","getActiveObjects","map","ao","type","set","state","reloadCanvas","showColorPicker","_keyHandler","bind","assertThisInitialized","_showerHandler","_resizeCanvas","setBackgroundImage","evt","c","key","activeObject","remove","show","wheight","window","innerHeight","wwidth","innerWidth","fabric","Canvas","width","image","Image","src","require","crossOrigin","onload","console","log","setDimensions","height","renderAll","backgroundImageStretch","scaleX","scaleY","waterMark","watermark","Text","fill","evented","selectable","fontSize","top","getHeight","add","document","addEventListener","removeEventListener","f_img","txtCanvas","Textbox","setColor","setActiveObject","getElementById","toBlob","blob","saveAs","renderAndReset","react_default","a","createElement","lib","triangle","onChangeComplete","colors","_this2","className","style","role","for","id","onClick","addAccesory","title","addText","saveFile","template","fun","fromURL","img","Component","Boolean","location","hostname","match","ReactDOM","render","EditorComponent_EditorComponent","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dccb470d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/milos.6d8eb209.jpg\";","module.exports = __webpack_public_path__ + \"static/media/will-smith.490f4869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gorrito.538a753b.png\";","export const templates = [\r\n    {\r\n        name: \"Bob esponja\",\r\n        tags: [\r\n            \"Helado\",\r\n            \"Esponja enloqueciste\"\r\n        ],\r\n        url: \"https://i.ytimg.com/vi/1gPtZxKbl9g/hqdefault.jpg\"\r\n    },\r\n    {\r\n        name: \"CR7\",\r\n        tags: [\r\n            \"CR7\",\r\n            \"SIU\"\r\n        ],\r\n        url: \"https://images.mediotiempo.com/EB_bKN3nLnGgacxJ0oAVBuJYDCc=/958x596/uploads/media/2019/08/06/cristiano-ronaldo-revela-significado-grito.jpg\"\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { saveAs } from 'file-saver';\r\nimport { TwitterPicker } from 'react-color';\r\nimport { templates } from '../simulator';\r\n\r\nclass EditorComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            textColor: 'black',\r\n            showColorPicker: true\r\n        }\r\n        this._keyHandler = this._keyHandler.bind(this);\r\n        this._showerHandler = this._showerHandler.bind(this);\r\n        this._resizeCanvas = this._resizeCanvas.bind(this);\r\n        this.setBackgroundImage = this.setBackgroundImage.bind(this);\r\n    }\r\n\r\n    _resizeCanvas() {\r\n\r\n    }\r\n    _keyHandler(evt) {\r\n        const c = this.canvas;\r\n        switch (evt.key) {\r\n            case 'Delete':\r\n                c.getActiveObjects().map(\r\n                    activeObject => {\r\n                        return c.remove(activeObject);\r\n                    }\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    _showerHandler(show) {\r\n        this.setState({ showColorPicker: show })\r\n    }\r\n\r\n    componentDidMount() {\r\n        var wheight = window.innerHeight,\r\n            wwidth = window.innerWidth;\r\n        var canvas = new fabric.Canvas('c');\r\n\r\n        this.canvas = canvas;\r\n        canvas.width = 200;\r\n        var image = new Image();\r\n\r\n        image.src = require('../milos.jpg');\r\n        image.crossOrigin = '';\r\n        image.onload = function () {\r\n\r\n            console.log(wheight, wwidth);\r\n            var height = wheight * .80;\r\n            var aspectRatio = 1;    // height:width = 3:2\r\n            console.log(canvas.width * aspectRatio);\r\n            canvas.setDimensions({ height: wheight * .60, width: wwidth * .60 })\r\n            canvas.setBackgroundImage(new fabric.Image(image), canvas.renderAll.bind(canvas), {\r\n                backgroundImageStretch: true,\r\n                scaleX: canvas.width / image.width,\r\n                scaleY: canvas.height / image.height\r\n            });\r\n        }\r\n\r\n        var waterMark = new Image();\r\n        waterMark.src = require('../will-smith.jpg');\r\n        waterMark.onload = function () {\r\n            var watermark = new fabric.Text(\"Momingo.net\");\r\n            watermark.fill = 'white';\r\n            watermark.evented = false;\r\n            watermark.selectable = false;\r\n            //watermark.scaleX = .5;\r\n            //watermark.scaleY = .5;\r\n            //watermark.opacity = .6;\r\n            watermark.fontSize = 20;\r\n            watermark.top = canvas.getHeight() / 2;\r\n            canvas.add(watermark);\r\n        }\r\n\r\n        document.addEventListener('keydown', this._keyHandler, false);\r\n        window.addEventListener('resize', this._resizeCanvas, false);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', null);\r\n    }\r\n\r\n    addAccesory() {\r\n        var image = new Image();\r\n        image.src = require('../gorrito.png');\r\n        const canvas = this.canvas;\r\n        image.onload = function () {\r\n            var f_img = new fabric.Image(image);\r\n            f_img.scaleX = .5;\r\n            f_img.scaleY = .5;\r\n            canvas.add(f_img);\r\n        }\r\n    }\r\n\r\n    addText() {\r\n        var txtCanvas = new fabric.Textbox('Escribe aqui');\r\n        txtCanvas.setColor(this.state.textColor);\r\n        txtCanvas.fontSize = 18;\r\n\r\n        this.canvas.add(txtCanvas);\r\n        this.canvas.setActiveObject(txtCanvas);\r\n    }\r\n\r\n    saveFile() {\r\n        var canvas = document.getElementById('c');\r\n        canvas.toBlob(\r\n            function (blob) {\r\n                saveAs(blob, 'meme.jpg');\r\n            }\r\n        )\r\n    }\r\n\r\n    reloadCanvas() {\r\n        this.canvas.renderAndReset();\r\n    }\r\n\r\n    changeColor = color => {\r\n        this.setState({ textColor: color.hex });\r\n\r\n        this.canvas.getActiveObjects().map(\r\n            ao => {\r\n                switch (ao.type) {\r\n                    case 'textbox':\r\n                        ao.set('fill', this.state.textColor);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        );\r\n        this.reloadCanvas();\r\n    }\r\n\r\n    showColorPicker() {\r\n        if (this.state.showColorPicker)\r\n            return <TwitterPicker color={this.state.textColor ? this.state.textColor : '#fff'} triangle={\"hide\"} onChangeComplete={this.changeColor} colors={['#fff', '#000']} />\r\n    }\r\n\r\n    setBackgroundImage(image) {\r\n        let canvas = this.canvas;\r\n        canvas.setBackgroundImage(image, canvas.renderAll.bind(canvas), {\r\n            backgroundImageStretch: true,\r\n            scaleX: canvas.width / image.width,\r\n            scaleY: canvas.height / image.height\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                    <a className=\"navbar-brand\" style={{ color: \"#fff\" }}>Momingo.net</a>\r\n                </nav>\r\n                <main role=\"main\">\r\n                    <h1 className='text-center'>Momingo Generator</h1>\r\n                    <br></br>\r\n                    <form className=\"form-inline\">\r\n                        <div>\r\n                            <label for=\"search\">Buscar plantilla: </label>\r\n                            <input className=\"form-control\" id=\"search\" type=\"text\"></input>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-success\">Buscar</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            {this.showColorPicker()}\r\n                            <button className=\"btn btn-light\" onClick={() => { this.addAccesory() }}>I\r\n          </button>\r\n                            <button className=\"btn btn-light\" title=\"Agrega texto\" onClick={() => { this.addText() }}><i className=\"fa fa-font\" />\r\n                            </button>\r\n                            <button className=\"btn btn-light\" title=\"SAVE\" onClick={() => { this.saveFile() }}><i className=\"fa fa-save\" /></button>\r\n                            <button className=\"btn btn-light\" title=\"DELETE\" onClick={() => {\r\n                                this.canvas.getActiveObjects().map(\r\n                                    activeObject => {\r\n                                        return this.canvas.remove(activeObject);\r\n                                    }\r\n                                )\r\n                            }}> <i className=\"fa fa-remove\" />\r\n                            </button>\r\n                            <button className=\"btn btn-light\" title=\"DELETE\" onClick={() => {\r\n                                this.setState({ showColorPicker: !this.state.showColorPicker })\r\n                            }}> <i className=\"fa fa-remove\" />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\" id=\"imageContainer\"> <canvas id='c'></canvas></div>\r\n                            <div className=\"col-md-3\"><p>Upload stuff</p></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            templates.map(\r\n                                template => {\r\n                                    return <div onClick={\r\n                                        () => {\r\n                                            let fun = this.setBackgroundImage;\r\n                                            fabric.Image.fromURL(template.url, function (img) {\r\n                                                console.log(img.crossOrigin);\r\n                                                fun(img);\r\n                                            }, null,\r\n                                                { crossOrigin: 'anonymous' }\r\n                                            );\r\n                                        }\r\n                                    }>\r\n                                        <p>{template.name}</p>\r\n                                        <img height=\"auto\" width=\"auto\" src={template.url} ></img>\r\n                                    </div>\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { EditorComponent };","import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark navbar fixed-top\">\n          <a className=\"navbar-brand\" href=\"#\">Momingo.net</a>\n        </nav>\n        <main role=\"main\">\n\n          <p>HOLA</p>\n        </main>\n\n        <footer className=\"container\">\n          <p>&copy; Bean.io 2019</p>\n        </footer>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {EditorComponent} from './EditorComponent/EditorComponent';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<EditorComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}